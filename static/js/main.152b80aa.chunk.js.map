{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","console","log","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.152b80aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.0f303739.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){    \r\n        margin-bottom:50px;\r\n    }\r\n`;\r\n//:not(:last-child){}  마지막 차일드는 마진 바텀을 안주겠다는 의미.\r\n\r\n\r\nconst Title = styled.span`\r\n    font-size: 16px;\r\n    font-weight : 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top : 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n\r\n`;\r\n\r\nconst Section = ({title, children}) =>(\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children : PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size : 12px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            \"Loading...\"\r\n        </span>\r\n    </Container>\r\n);\r\n//시각 장애인에게 페이지가 넘어갈때 '로딩'이라고 읽어줌","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n          </Helmet>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default HomePresenter;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL :\"https://api.themoviedb.org/3/\",\r\n    params:{\r\n        api_key : \"6ead4c55bb7e6b2e1c6c59f1c80d4223\",\r\n        language : \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi={\r\n    nowPlaying : () => api.get(\"movie/now_playing\"),\r\n    upcoming : () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params:{\r\n            append_to_response : \"videos\"\r\n        }\r\n    }),\r\n    search : (term) => api.get(\"search/movie\", {\r\n        params:{\r\n            query : encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi={\r\n    topRated : () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday : () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {   //영화마다 id가 있기 때문에 id를 받아서 해당 영화정보 받아옴\r\n        params : {\r\n            append_to_response : \"videos\"   //디테일 누르면 딸려 나오는 각종 정보들 뽑아주는 파라미터\r\n        }\r\n    }),\r\n    search : (term) => api.get(\"search/tv\", {\r\n        params:{\r\n            query : encodeURIComponent(term)   //검색할때 스페이스바, 특수문자등 string으로 처리해주는 파라미터\r\n        }\r\n    })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport {moviesApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error :null,\r\n        loading : true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try{\r\n\r\n            const{\r\n                data: {results : nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            const{\r\n                data: {results : upcoming}\r\n            } = await moviesApi.upcoming();\r\n            const{\r\n                data: {results : popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying, upcoming, popular\r\n            });  \r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find movies information. \"\r\n            });\r\n        }finally{\r\n            this.setState({\r\n                loading : false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) =>(\r\n    <>\r\n        <Helmet><title>TV Show | Nomflix</title></Helmet>\r\n        {loading ? (<Loader/>) : (\r\n        <Container>\r\n            {topRated && topRated.length >0 &&\r\n                (<Section title = \"Top Rated Shows\">{topRated.map(show => <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                />)}\r\n                </Section>)\r\n            }\r\n            {popular && popular.length >0 &&\r\n                (<Section title = \"Popular Shows\">{popular.map(show =><Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                />)}\r\n                </Section>)\r\n            }\r\n            {airingToday && airingToday.length >0 &&\r\n                (<Section title = \"Airing Today\">{airingToday.map(show =><Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                />)}\r\n                </Section>)\r\n            }\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n    )}\r\n    </>\r\n\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:PropTypes.array, \r\n    popular:PropTypes.array, \r\n    airingToday:PropTypes.array, \r\n    loading:PropTypes.bool.isRequired, \r\n    error:PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport {tvApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {\r\n                data : {results :topRated}\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data : {results :popular}\r\n            } = await tvApi.popular();\r\n            const {\r\n                data : {results :airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated, popular, airingToday\r\n            });\r\n        }catch{\r\n            this.setState({\r\n                error:\"Can't find TV information. \"\r\n            })\r\n        }finally{\r\n            this.setState({\r\n                loading:false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position :fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    background-color:rgba(20,20,20,0.8);\r\n    z-index:10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:50px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom: 3px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition : border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink= styled(Link)`\r\n    height: 50px;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content : center;\r\n`;\r\n\r\n//메뉴를 누르면 현재 내 위치가 어디있는지 알려줌\r\nexport default withRouter( ({location : {pathname}}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom : 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size : 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults, \r\n    tvResults,  \r\n    loading,\r\n    searchTerm, \r\n    handleSubmit,\r\n    error,\r\n    updateTerm\r\n}) => <Container>\r\n    <Helmet><title>Search | Nomflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search Movies or TV Shows...\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}/>\r\n\r\n    </Form>\r\n    {loading ? (\r\n    <Loader />\r\n    ) : (\r\n    <>\r\n        {movieResults && movieResults.length >0 && (\r\n            <Section title=\"Movie Results\">\r\n                {movieResults.map(movie => (\r\n                    <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageUrl={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date.substring(0, 4)}\r\n                    isMovie={true}\r\n                />\r\n                ))}\r\n            </Section>\r\n        )}\r\n\r\n        {tvResults && tvResults.length >0 && (\r\n            <Section title=\"TV Shows Results\">\r\n                {tvResults.map(show => (\r\n                    <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                />\r\n                ))}\r\n            </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 && (\r\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n        )}\r\n    </>\r\n    )}\r\n\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:PropTypes.array, \r\n    tvResults:PropTypes.array, \r\n    error:PropTypes.string,\r\n    searchTerm:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired, \r\n    handleSubmit:PropTypes.func.isRequired,\r\n    updateTerm:PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {tvApi} from \"api\";\r\nimport {moviesApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",   //검색창\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n \r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;  //state에 있는 searchTerm가 공백이 아니면 searchByTerm펑션 실행\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const {target :{value}} = event;\r\n        this.setState({\r\n            searchTerm : value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async() => {  //무언가 검색창에 쳐지면 실행되는 펑션\r\n        const {searchTerm} = this.state;\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        try{\r\n            const {\r\n                data: {results: movieResults}\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: {results:tvResults}\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults, tvResults\r\n            });\r\n            \r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find results. \"\r\n            });\r\n        }finally{\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        \r\n        return (\r\n            <SearchPresenter\r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                error={error}\r\n                loading={loading}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit} \r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    height:calc(100vh - 50px);\r\n    width : 100%;\r\n    position : relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width:70%;\r\n    margin-left : 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 30px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin : 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:12px;\r\n    opacity : 0.7;\r\n    line-height : 1.5;\r\n    width : 50%;\r\n`;\r\n\r\n\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n                </Helmet>\r\n                <Backdrop\r\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n                />\r\n                <Content>\r\n                    <Cover\r\n                        bgImage={\r\n                            result.poster_path\r\n                                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                                : require(\"../../assets/noPosterSmall.png\")\r\n                        }\r\n                    />\r\n                    <Data>\r\n                        <Title>\r\n                            {result.original_title ? result.original_title : result.original_name}\r\n                        </Title>\r\n                        <ItemContainer>\r\n\r\n                            <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\r\n                            <Divider>•</Divider>\r\n                            <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n                            <Divider>•</Divider>\r\n                            <Item>\r\n                                {result.genres &&\r\n                                    result.genres.map((genre, index) =>\r\n                                        index === result.genres.length - 1 ? genre.name : `${genre.name}/`\r\n                                    )}\r\n                            </Item>\r\n                        </ItemContainer>\r\n                        <Overview>{result.overview}</Overview>\r\n                    </Data>\r\n                </Content>\r\n            </Container>\r\n        );\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default DetailPresenter;\r\n\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport {tvApi} from \"api\";\r\nimport {moviesApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const {location : {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n    \r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: { params: { id }\r\n            },\r\n            history : {push}\r\n        } = this.props;\r\n        const {isMovie} = this.state;\r\n        const parseId = parseInt(id);\r\n        if (isNaN(parseId)) {\r\n            return push(\"/\");\r\n        }\r\n        let result=null;\r\n        try{\r\n            if(isMovie){\r\n                ({\r\n                    data : result\r\n                }=await moviesApi.movieDetail(parseId));\r\n            }else{\r\n                ({\r\n                    data : result\r\n                }=await tvApi.showDetail(parseId));\r\n            }\r\n        }catch{\r\n            this.setState({error: \"Can't find anything. \"})\r\n        }finally{\r\n            this.setState({loading:false, result});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\"; \r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n        <Route path=\"https://sdu7949.github.io/nomflix/\" exact component={Home} />\r\n        <Route path=\"/tv\"  component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n        </>\r\n    </Router>\r\n\r\n);\r\n\r\n","import {createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size : 12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}